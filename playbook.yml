---
- name: Minimal Ansible Playbook
  hosts: all
  vars:
    is_ci: "{{ lookup('env', 'CI') | default(false) | bool }}"
  vars_prompt:
    - name: github_token
      prompt: "Enter your GitHub Personal Access Token (classic) with 'repo', 'read:org', and 'write:gpg_key' scopes (press Enter to skip if already configured)"
      private: yes
      default: "{{ lookup('env', 'GH_TOKEN') | default('') }}"
    - name: user_name
      prompt: "Enter your name for GPG key (press Enter to use USER_NAME env var)"
      private: no
      default: "{{ lookup('env', 'USER_NAME') | default(lookup('env', 'USER')) }}"
    - name: user_email
      prompt: "Enter your email for GPG key (press Enter to use USER_EMAIL env var)"
      private: no
      default: "{{ lookup('env', 'USER_EMAIL') | default(lookup('env', 'USER') + '@users.noreply.github.com') }}"

  tasks:
    - name: Include Git tasks
      include_tasks: roles/common/tasks/git.yml

    - name: Include GPG tasks
      include_tasks: roles/common/tasks/gpg.yml

    - name: Include GitHub CLI tasks
      include_tasks: roles/common/tasks/gh.yml

    - name: Example task
      debug:
        msg: "Hello from Ansible!"

    - name: Check if Zsh is installed
      command: zsh --version
      register: zsh_version
      changed_when: false
      ignore_errors: true

    - name: Install Zsh on macOS
      homebrew:
        name: zsh
        state: latest
      when: ansible_os_family == "Darwin" and zsh_version.rc != 0
      register: zsh_install
      failed_when: zsh_install.failed

    - name: Install Zsh on Ubuntu
      apt:
        name: zsh
        state: latest
      when: ansible_os_family == "Debian" and zsh_version.rc != 0
      become: true
      register: zsh_install
      failed_when: zsh_install.failed

    - name: Check if Oh My Zsh is installed
      stat:
        path: ~/.oh-my-zsh
      register: oh_my_zsh

    - name: Install Oh My Zsh
      shell: |
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
      when: not oh_my_zsh.stat.exists
      register: oh_my_zsh_install
      failed_when: oh_my_zsh_install.failed

    - name: Configure Oh My Zsh plugins
      lineinfile:
        path: ~/.zshrc
        regexp: '^plugins=\(.*\)$'
        line: 'plugins=(git gh docker docker-compose kubectl helm aws terraform)'
        create: yes
      when: oh_my_zsh.stat.exists or oh_my_zsh_install is defined and oh_my_zsh_install.rc == 0
      register: plugins_config
      failed_when: plugins_config.failed

    - name: Configure Oh My Zsh theme
      lineinfile:
        path: ~/.zshrc
        regexp: '^ZSH_THEME=.*$'
        line: 'ZSH_THEME="robbyrussell"'
        create: yes
      when: oh_my_zsh.stat.exists or oh_my_zsh_install is defined and oh_my_zsh_install.rc == 0
      register: theme_config
      failed_when: theme_config.failed

    - name: Create custom aliases file
      copy:
        dest: ~/.oh-my-zsh/custom/aliases.zsh
        content: |
          # Custom aliases
          alias ll='ls -la'
          alias k='kubectl'
        mode: '0644'
      when: oh_my_zsh.stat.exists or oh_my_zsh_install is defined and oh_my_zsh_install.rc == 0
      register: aliases_config
      failed_when: aliases_config.failed

    - name: Set Zsh as default shell
      shell: chsh -s $(which zsh)
      when: zsh_version.rc == 0 and ansible_env.SHELL != '/bin/zsh'
      become: true
      register: chsh_config
      failed_when: chsh_config.rc != 0
      ignore_errors: true

    - name: Show Zsh status
      debug:
        msg: |
          Zsh status:
          {% if zsh_version.rc == 0 %}
          Version: {{ zsh_version.stdout }}
          {% if oh_my_zsh.stat.exists or (oh_my_zsh_install is defined and oh_my_zsh_install.rc == 0) %}
          Oh My Zsh: Installed
          {% else %}
          Oh My Zsh: Not installed
          {% endif %}
          {% else %}
          Zsh is not installed
          {% endif %}

    - name: Install JetBrains Mono font
      include_tasks: roles/common/tasks/fonts.yml
      tags: fonts